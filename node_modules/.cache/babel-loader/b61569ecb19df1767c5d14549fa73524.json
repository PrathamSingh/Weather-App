{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java Script\\\\Node js\\\\Node Projects\\\\Weather-App\\\\src\\\\components\\\\LocationSearchBar.js\";\nimport React from 'react';\nimport { LocationSearchAPI } from '../APIKeys.js';\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.value.length > 0) {\n        this.setState({\n          queryText: e.target.value,\n          showList: true\n        });\n        this.fetchDataByText(e.target.value);\n      } else {\n        this.setState({\n          data: null,\n          queryText: \"\"\n        });\n      }\n    };\n\n    this.toggleDropdown = showList => {\n      this.setState({\n        showList\n      });\n    };\n\n    this.handleClick = featureIndex => {\n      let features = this.state.data.features[featureIndex];\n      let longitude = features.geometry.coordinates[0];\n      let latitude = features.geometry.coordinates[1];\n      this.props.setLatLong(latitude, longitude);\n      this.setState({\n        queryText: features.text\n      });\n      this.toggleDropdown(false);\n      this.props.setCity(features.text);\n    };\n\n    this.handleBlur = () => {\n      setTimeout(() => {\n        this.toggleDropdown(false);\n      }, 100);\n    };\n\n    this.fetchDataByText = queryText => {\n      const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + queryText + '.json?access_token=' + LocationSearchAPI;\n      fetch(url).then(results => results.json()).then(sdata => {\n        this.setState({\n          data: sdata\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      queryText: \"\",\n      showList: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"locationSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"location-search-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.queryText,\n      onBlur: this.handleBlur,\n      placeholder: \"Search for location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.state.showList && React.createElement(\"ul\", {\n      className: \"searchList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.data && this.state.data.features && this.state.data.features.length > 0 && this.state.data.features.map((data, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        className: \"options\",\n        onClick: () => {\n          this.handleClick(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, data[\"place_name\"]);\n    }))));\n  }\n\n}\n\nexport default LocationSearchBar;","map":{"version":3,"sources":["F:\\Java Script\\Node js\\Node Projects\\Weather-App\\src\\components\\LocationSearchBar.js"],"names":["React","LocationSearchAPI","LocationSearchBar","Component","constructor","props","handleChange","e","target","value","length","setState","queryText","showList","fetchDataByText","data","toggleDropdown","handleClick","featureIndex","features","state","longitude","geometry","coordinates","latitude","setLatLong","text","setCity","handleBlur","setTimeout","url","fetch","then","results","json","sdata","render","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LocationSearchAPI } from '../APIKeys.js';\r\n\r\nclass LocationSearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : null,\r\n      queryText: \"\",\r\n      showList: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if(e.target.value.length>0) {\r\n      this.setState({\r\n        queryText: e.target.value,\r\n        showList: true,\r\n      });\r\n      this.fetchDataByText(e.target.value);\r\n    } else {\r\n      this.setState({\r\n        data: null,\r\n        queryText: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleDropdown = (showList) => {\r\n    this.setState({showList});\r\n  }\r\n\r\n  handleClick = (featureIndex) => {\r\n    let features = this.state.data.features[featureIndex];\r\n    let longitude = features.geometry.coordinates[0];\r\n    let latitude = features.geometry.coordinates[1];\r\n    this.props.setLatLong(latitude,longitude);\r\n    this.setState({queryText: features.text});\r\n    this.toggleDropdown(false);\r\n    this.props.setCity(features.text);\r\n  }\r\n\r\n  handleBlur = () => {\r\n    setTimeout(() => {\r\n      this.toggleDropdown(false);\r\n    },100)\r\n  }\r\n\r\n  fetchDataByText = (queryText) => {\r\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/'+queryText+'.json?access_token=' + LocationSearchAPI;\r\n    fetch(url)\r\n    .then(results => results.json())\r\n    .then((sdata) => {\r\n      this.setState({\r\n        data : sdata,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"locationSearchBar\">\r\n        <div className=\"location-search-container\">\r\n        <input type=\"text\" onChange={this.handleChange} value={this.state.queryText} onBlur={this.handleBlur} \r\n          placeholder=\"Search for location\"\r\n        />\r\n        {this.state.showList &&\r\n        <ul className=\"searchList\">\r\n          {/* {options} */}\r\n          {this.state.data && this.state.data.features && this.state.data.features.length > 0 &&\r\n            this.state.data.features.map((data, index) => {\r\n              return (\r\n                <li  key={index}\r\n                    className=\"options\"\r\n                    onClick={() => {\r\n                      this.handleClick(index)\r\n                      }}\r\n                  >\r\n                  {data[\"place_name\"]}\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default LocationSearchBar;"]},"metadata":{},"sourceType":"module"}