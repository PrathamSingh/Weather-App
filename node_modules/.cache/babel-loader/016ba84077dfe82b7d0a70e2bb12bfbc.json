{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformSync = transformSync;\nexports.transformAsync = transformAsync;\nexports.transform = void 0;\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _transformation = require(\"./transformation\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst transform = function transform(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) return transformSync(code, opts);\n  const cb = callback;\n  process.nextTick(() => {\n    let cfg;\n\n    try {\n      cfg = (0, _config.default)(opts);\n      if (cfg === null) return cb(null, null);\n    } catch (err) {\n      return cb(err);\n    }\n\n    (0, _transformation.runAsync)(cfg, code, null, cb);\n  });\n};\n\nexports.transform = transform;\n\nfunction transformSync(code, opts) {\n  const config = (0, _config.default)(opts);\n  if (config === null) return null;\n  return (0, _transformation.runSync)(config, code);\n}\n\nfunction transformAsync(code, opts) {\n  return new Promise((res, rej) => {\n    transform(code, opts, (err, result) => {\n      if (err == null) res(result);else rej(err);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script"}